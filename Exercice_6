#include<iostream>
#include<string>
#include<cmath>
using namespace std;

class Calcul{
private:
    int somme, produit;
    int list_div1[100];
    int list_div2[100];
    int nb_diviseurs;
public:
    Calcul();
    int Somme(int n);
    void afficherSomme();
    int Produit(int m);
    float moyenne(float t);
    int factorielle(int m);
    bool test_primalite(int p);
    void test_premier(int a,int b);
    void table_multiplication(int x);
    void list_diviseurs(int y);
    void list_diviseurs_premiers(int c);
    ~Calcul();
};

Calcul::Calcul(){}

int Calcul::Somme(int n){ 
    if (n<0){
        cout<<"Il faut entrer un nombre positif "<<endl;
        return 0;
    }
    if(n==0){
        return 0;
    }
    else{
        this->somme = n + Somme(n-1);
        return this->somme;
    }
}
void Calcul::afficherSomme(){
    cout<<"La somme des nombres entiers est : "<<this->somme<<endl;
}
int Calcul::Produit(int m){
    if (m<0){
        cout<<"Il faut entrer un nombre positif "<<endl;
        return 0;
    }
    if(m==0){
        return 1;
    }
    else{
        return m*Produit(m-1);
    }
}

float Calcul::moyenne(float t){
    if (t<=0){
        cout<<"Il faut entrer un nombre positif "<<endl;
        return 0;
    }
    else{
        float resultat=(float)Somme((int)t)/(int)t;
        cout << "La moyenne des entiers de 1 Ã  " << (int)t << " est : " << resultat << endl;
        return resultat;
    }
}
int Calcul::factorielle(int m){
    this->produit = Produit(m);
    cout<<"Le factorielle du nombre "<<m;
    cout<<" est : "<<this->produit<<endl;
    return this->produit;
}

bool Calcul::test_primalite(int p){
    if (p <= 1) {
        cout<<"Le nombre "<<p<<" n'est pas un nombre premier "<<endl;
        return false;
    }
    for(int i=2; i<=sqrt(p); i++){
        if(p%i==0){
            cout<<"Le nombre "<<p<<" n'est pas un nombre premier "<<endl;
            return false;
        }
    }
    cout<<"Le nombre "<<p<<" est un nombre premier "<<endl;
    return true;
}

void Calcul::test_premier(int a,int b){
    int temp_a = a, temp_b = b;
    while(temp_b != 0){
        int r = temp_a % temp_b;
        temp_a = temp_b;
        temp_b = r;
    }
    if(temp_a == 1)
        cout<<"Les deux nombres "<<a<<" et "<<b<<" sont premiers entre eux"<<endl;
    else
        cout<<"Les deux nombres "<<a<<" et "<<b<<" ne sont pas premiers entre eux"<<endl;
}

void Calcul::table_multiplication(int x){
    cout<<"La table de multiplication de "<<x<<" est : "<<endl;
    for(int i=0;i<=10;i++){
        cout<<x<<" * "<<i<<" = "<<x*i<<endl;
    }
}

void Calcul::list_diviseurs(int y){
    int j=1;
    int k=0; 
    while(j<=y){
        if(y%j==0){
            this->list_div1[k]=j;
            k++;
            if (k >= 100) break;
        }
        j++;
    }
    this->nb_diviseurs = k;
    cout<<"La liste des diviseurs de "<<y<<" est :"<<endl;
    for (int i = 0; i < this->nb_diviseurs; i++){  
        cout<<this->list_div1[i]<<" , ";
    }
    cout<<endl;
}

void Calcul::list_diviseurs_premiers(int c){
    int j=1;
    int t=1;
    int i=0;
    int k=0; 
    while(j<=c){
        if(c%j==0){
            this->list_div2[k]=j;
            k++;
            if (k >= 100) break;
        }
        j++;
    }
    this->nb_diviseurs = k;
    cout<<"La liste des diviseurs premiers de "<<c<<" est :"<<endl;
    for (int i = 0; i < this->nb_diviseurs; i++){
        int diviseur = this->list_div2[i];
        bool isPremier = true;
        for(int j=2; j<=sqrt(diviseur); j++){
            if(diviseur%j==0){
                isPremier = false;
                break;
            }
        }
        if(isPremier && diviseur > 1){
            cout<<diviseur<<" , ";
        }
    }
}

Calcul::~Calcul(){}

int main(void){
    Calcul C1;
    C1.Somme(8);
    C1.afficherSomme();
    C1.moyenne(10);
    C1.factorielle(5);
    C1.test_primalite(2);
    C1.test_premier(8,15);
    C1.table_multiplication(9);
    C1.list_diviseurs(84);
    C1.list_diviseurs_premiers(237);
}
